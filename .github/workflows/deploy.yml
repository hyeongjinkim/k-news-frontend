name: Deploy to Vultr Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to Server via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        script: |
          # --- PM2 완전 초기화 ---
          echo ">>> [PM2] 모든 프로세스를 삭제하고 초기화합니다..."
          pm2 delete all || true
          pm2 save --force

          # --- 백엔드 배포 ---
          echo ">>> [백엔드] 최신 코드를 받아옵니다..."
          cd /home/k-news-admin/seoulsync/backend
          git fetch origin
          git reset --hard origin/main
          echo ">>> [백엔드] 파이썬 라이브러리를 설치합니다..."
          /home/k-news-admin/seoulsync/backend/venv/bin/pip install -r requirements.txt

          echo ">>> [백엔드] PM2로 직접 서버를 시작합니다..."
          # ecosystem 파일을 사용하지 않고, 모든 경로와 인자를 명시하여 직접 실행
          pm2 start /home/k-news-admin/seoulsync/backend/venv/bin/python \
            --name "k-news-backend" \
            --cwd /home/k-news-admin/seoulsync/backend \
            -- \
            -m uvicorn main:app --host 0.0.0.0 --port 8000

          # --- 프론트엔드 배포 ---
          echo ">>> [프론트엔드] 최신 코드를 받아옵니다..."
          cd /home/k-news-admin/k-news-frontend
          git fetch origin
          git reset --hard origin/main
          echo ">>> [프론트엔드] 의존성을 새로 설치합니다..."
          npm ci
          echo ">>> [프론트엔드] 프로젝트를 새로 빌드합니다..."
          npm run build
          echo ">>> [프론트엔드] PM2로 서버를 시작합니다..."
          pm2 start .output/server/index.mjs --name "k-news-frontend"

          # --- 최종 PM2 설정 저장 ---
          echo ">>> PM2 설정을 저장하여 재부팅 시에도 유지합니다..."
          pm2 save

          echo "✅ 모든 배포 과정이 성공적으로 완료되었습니다!"
          pm2 list